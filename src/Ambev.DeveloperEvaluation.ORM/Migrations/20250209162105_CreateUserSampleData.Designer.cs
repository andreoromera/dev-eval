// <auto-generated />
using System;
using Ambev.DeveloperEvaluation.ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ambev.DeveloperEvaluation.ORM.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20250209162105_CreateUserSampleData")]
    partial class CreateUserSampleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Ambev.DeveloperEvaluation.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("gen_random_uuid()");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c205acda-f799-4620-af11-2d0d31c4cc61"),
                            CreatedAt = new DateTime(2025, 2, 9, 13, 17, 8, 105, DateTimeKind.Utc),
                            Email = "john@ambev.com.br",
                            Password = "$2a$11$98uK.e4T65eZLbZoM1m4UeTvWdq3Cv1Yb7GA.VfaNkq2RAreOTIxy",
                            Phone = "11984151122",
                            Role = "Admin",
                            Status = "Active",
                            Username = "John"
                        },
                        new
                        {
                            Id = new Guid("bd43d49a-1246-4368-8ec1-03508d2c9bf1"),
                            CreatedAt = new DateTime(2025, 2, 9, 13, 17, 8, 105, DateTimeKind.Utc),
                            Email = "mary@ambev.com.br",
                            Password = "$2a$11$bSfY6FmnKx4QxnTOw9DHz.864wBSBWAAq.eeojS.c6POYGtp8iTWS",
                            Phone = "11984153344",
                            Role = "Admin",
                            Status = "Active",
                            Username = "Mary"
                        },
                        new
                        {
                            Id = new Guid("a13304d6-3748-4720-b1cf-149c4092fdc0"),
                            CreatedAt = new DateTime(2025, 2, 9, 13, 17, 8, 105, DateTimeKind.Utc),
                            Email = "jane@ambev.com.br",
                            Password = "$2a$11$A.3yd/ekyeIV8KrrZrJ7KuXBpnmwFlFDA85WZLRM076hZPrM.G6zC",
                            Phone = "11984155566",
                            Role = "Customer",
                            Status = "Active",
                            Username = "Jane"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
